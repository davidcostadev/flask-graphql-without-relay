type Article {
  id: ID!
  title: String
  body: String
  publishedAt: DateTime
  authorId: Int
  author: Author
}

input ArticleFilter {
  id: FilterIdNumber
}

type ArticleListResult {
  data: [Article!]
  pagination: Pagination
}

input ArticleSorting {
  title: Sorting
}

type Author {
  id: ID!
  name: String
  articles: [Article]
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

input FilterIdNumber {
  eq: Int
  inList: [Int!]
}

type Pagination {
  totalCount: Int
  totalPages: Int
  page: Int
  limit: Int
}

input PaginationInput {
  page: Int = 1
  limit: Int = 25
}

type Query {
  articles(filter: ArticleFilter, pagination: PaginationInput, sorting: ArticleSorting): ArticleListResult
}

enum Sorting {
  ASC
  DESC
}

