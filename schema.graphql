schema {
  query: Query
  mutation: Mutations
}

type Article {
  id: ID!
  title: String
  body: String
  publishedAt: DateTime
  authorId: Int
  author: AuthorSingleResult
}

input ArticleFilter {
  id: FilterIdNumber
}

input ArticleInput {
  title: String!
  body: String
  publishedAt: DateTime
  authorId: Int!
}

type ArticleListResult {
  data: [Article!]
  pagination: Pagination
}

type ArticleSingleResult {
  data: Article
}

input ArticleSorting {
  id: Sorting
  title: Sorting
  publishedAt: Sorting
}

type Author {
  id: ID!
  name: String
  articles: [Article]
}

type AuthorSingleResult {
  data: Author
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

input FilterIdNumber {
  eq: Int
  inList: [Int!]
}

type Mutations {
  createArticle(input: ArticleInput): ArticleSingleResult
}

type Pagination {
  totalCount: Int
  totalPages: Int
  page: Int
  limit: Int
}

input PaginationInput {
  page: Int = 1
  limit: Int = 25
}

type Query {
  articles(filter: ArticleFilter, pagination: PaginationInput, sorting: ArticleSorting): ArticleListResult
  article(id: Int): ArticleSingleResult
}

enum Sorting {
  ASC
  DESC
}

